# This is a basic workflow to help you get started with Actions

name: CI

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  #   paths:
  #     - '.github/workflows/blank.yml'
  #     - '.gitignore'
  #     - 'README.md'
  # pull_request:
  #   branches: [ "main" ]
  schedule:
    - cron: 0 18 * * 6
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main
      
      - name: Run a multi-line script
        run: |
          echo "strDate=$(TZ=UTC-8 date +%Y-%m-%d)" >> $GITHUB_ENV
          sudo chmod 777 /mnt
          cp r68s.conf /mnt/
          
      # Runs a single command using the runners shell exce(sh ar68s.sh)
      - name: Run a one-line script
        run: sh ar68s_auto.sh
      - name: mv /mnt/r68s/bin/targets/rockchip/armv8/*.img.gz
        run: |
          mkdir file
          mv /mnt/r68s/bin/targets/rockchip/armv8/*.img.gz file/
          echo "###--------------------------------------------###"
          ls -lh
          cd file && ls -lh
      - name: show /mnt/r68s/bin/targets/rockchip/armv8/
        run: |
          echo "###--------------------------------------------###"
          cd /mnt && ls -lh
          echo "###--------------------------------------------###"
          cd r68s
          ls && ls -lh
          echo "###--------------------------------------------###"
          cd bin
          ls && ls -lh
          echo "###--------------------------------------------###"
          cd targets
          ls && ls -lh
          echo "###--------------------------------------------###"
          cd rockchip
          ls && ls -lh
          echo "###--------------------------------------------###"
          cd armv8
          ls && ls -lh
      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CYM_TOKEN }}
          tag: ${{env.strDate}}
          file_glob: true
          overwrite: true
          release_name: ${{env.strDate}} 自动发布
          file: file/*
